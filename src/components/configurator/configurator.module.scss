@use "../../scss/variables";
@use "../../scss/common";
@use "../../scss/animations/shake";

.configurator {
  position: relative;
  @media(min-width: variables.$container-md-min) {
    display: grid;
    grid-template-columns: 1fr 2fr 1fr;
    grid-template-rows: 1fr 0.25fr;
    grid-template-areas:
          "empty main language"
          ". . button";
  }
}

.mainContainer {
  display: block;
  grid-area: main;
}

.topContainer {
  display: flex;
  flex-direction: column;
  gap: var(--margin-small);

  @media(min-width: variables.$container-md-min) {
    flex-direction: row;
    justify-content: space-between;
    align-items: flex-end;
  }
}

.languageContainer {
  @media(min-width: variables.$container-md-min) {
    grid-area: language;
    justify-self: start;
    align-content: flex-start;
    margin-top: 50px;
  }
}

.languageLandscape {
  @extend .clear-button;
  display: none;


  @media(min-width: variables.$container-md-min) {
    display: flex;
    flex-direction: column;
    gap: var(--margin-small);
    margin-left: -10px;
  }
}

.languagePortrait {
  @extend .clear-button;
  display: flex;
  flex-direction: row;
  gap: var(--margin-variable-default);
  justify-content: center;
  margin-bottom: var(--margin-default);

  @media(min-width: variables.$container-md-min) {
    display: none;
  }
}

.flag {
  @extend .clear-button;
  opacity: var(--opacity-default);
  transition: rotate var(--transition-duration) ease-in-out;
  transition-property: rotate, scale, opacity;

  &:disabled {
    opacity: 1;
    color: var(--text-color);
  }

  @media(min-width: variables.$container-md-min) {
    &:disabled {
      scale: 2.5;
      pointer-events: none;

      &:global(.flag-it) {
        transform-origin: 18px 54px;
      }

      &:global(.flag-en) {
        transform-origin: 7px 56px;
        rotate: -20deg;
        translate: 2px 17px;
      }

      &:global(.flag-es) {
        transform-origin: 8px center;
      }
    }
  }
}

.language {
  @extend .clear-button;
  @extend .codemotion-wrapper-alternative;
  padding: var(--margin-variable-small) var(--margin-variable-default);
  display: block;
  font-weight: 500;
  text-transform: uppercase;
  transition: rotate var(--transition-duration) ease-in-out;
  transition-property: rotate, scale, opacity;
  opacity: var(--opacity-default);

  &:disabled {
    @extend .codemotion-wrapper;
    cursor: default;
    rotate: var(--rotation-deafult);
    scale: 1.2;
    opacity: 1;
  }

  p {
    margin: 0;
  }
}


.orientationContainer {
  display: flex;
  flex-direction: row;
  gap: var(--margin-default);
  justify-content: center;
  align-items: center;
  margin-top: var(--margin-small);
  margin-bottom: var(--margin-default);
  @media(min-width: variables.$container-md-min) {
    margin-bottom: var(--margin-default);
  }
}

.orientation {
  @extend .clear-button;
  text-transform: uppercase;
  display: flex;
  align-items: center;
  flex-direction: column;
  font-size: 40px;
  color: var(--orientation-text-color);
  transition: rotate var(--transition-duration) ease-in-out;
  transition-property: rotate, scale, opacity;
  opacity: var(--opacity-default);

  &:disabled {
    opacity: 1;
    rotate: var(--rotation-deafult);
    scale: 1.3;
  }

  span {
    font-size: 10px;
    margin-top: 5px;
  }
}


.levelTypeSelector {
  display: flex;
  flex-direction: row;
  gap: var(--margin-medium);
  justify-content: center;
  align-items: center;
  margin-bottom: calc(-1 * var(--border-width));
  margin-right: 20px;
}

.levelType {
  @extend .clear-button;
  @extend .codemotion-highlighted;
  text-transform: uppercase;
  opacity: var(--opacity-default);
  transform-origin: bottom center;
  transition: scale var(--transition-duration) ease-in-out;

  &:disabled {
    opacity: 1;
    scale: 1.2;
  }

  p {
    margin: 0;
  }
}

.levelContainer {
  @extend .codemotion-box;
  display: flex;
  flex-direction: column;
  gap: var(--margin-default);
  padding: var(--margin-default) var(--margin-default);
  padding-bottom: var(--margin-medium);
  @media(min-width: variables.$container-md-min) {
    padding: var(--margin-variable-medium) var(--margin-variable-big);
  }

  p {
    margin: 0;
  }
}

.level {
  display: flex;
  flex-direction: row;
  gap: var(--margin-default);
  justify-content: center;

  button {
    @extend .clear-button;
    max-width: 25%;
    background-color: var(--btn-level-bg);
    color: var(--btn-level-text);
    opacity: var(--opacity-default);
    transition: rotate var(--transition-duration) ease-in-out;
    transition-property: rotate, scale, opacity;

    @media(min-width: variables.$container-md-min) {
      max-width: 100%;
    }

    img {
      max-width: 100%;
    }

    p {
      margin: 0;
      text-transform: uppercase;
    }

    &:disabled {
      opacity: 1;
      cursor: default;
      scale: 1.1;
    }
  }
}

.slidesContainer {
  display: flex;
  flex-direction: column;
  gap: var(--margin-small);
  align-items: center;
  padding-left: calc(2 * var(--border-width));
  @media(min-width: variables.$container-md-min) {
    justify-content: flex-start;
    align-items: flex-start;
    flex-direction: column;
  }

}

.slidesTitle {
  @extend .title--simple;
  font-weight: 500;
  text-transform: uppercase;
  margin-bottom: var(--margin-default);

  @media(max-width: variables.$container-sm-max) {
    width: 100%;
    margin-bottom: var(--margin-small);
  }
}

.slides {
  display: flex;
  flex-direction: row;
  gap: var(--margin-default);
  justify-content: center;
  @media(min-width: variables.$container-md-min) {
    flex-direction: row;
    gap: var(--margin-medium);
  }
  @media(min-width: variables.$container-xl-min) {
  }
}

.slide {
  @extend .clear-button;
  @extend .codemotion-wrapper-alternative;
  padding: var(--margin-variable-small) var(--margin-variable-default);
  display: block;
  font-weight: 500;
  transition: rotate var(--transition-duration) ease-in-out;
  transition-property: rotate, scale, opacity;
  opacity: var(--opacity-default);

  &:disabled {
    @extend .codemotion-wrapper;
    cursor: default;
    rotate: var(--rotation-deafult);
    scale: 1.15;
    opacity: 1;
  }

  p {
    margin: 0;
  }

}

.startButton {
  grid-area: button;
  font-size: 27px !important;
  text-transform: uppercase;
  justify-self: stretch;


  @media(min-width: variables.$container-md-min) {
    margin-top: 0;
    position: absolute;
    top: -185px;
    left: -50px;
  }
  @media(min-width: variables.$container-xl-min) {
    top: -220px;
  }
}

.startButtonPortrait {
  @extend .startButton;
  display: none;
  margin-block: var(--margin-default);
  margin-inline: 0;
  padding: var(--margin-variable-small) var(--margin-variable-default);

  @media(max-width: variables.$container-sm-max) {
    width: 100%;
    display: block;
  }

  & div {
    display: flex;
    flex-direction: row;
    gap: var(--margin-small);
    justify-content: center;
    align-items: center;

    svg {
      font-size: 25px;
    }
  }
}

.startButtonLandscape {
  @extend .startButton;
  display: none;
  animation: jump-shaking 1.25s ease-in infinite;
  @media(min-width: variables.$container-md-min) {
    display: block;
  }
}
