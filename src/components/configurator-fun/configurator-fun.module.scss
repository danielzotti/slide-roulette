@use "../../scss/variables";
@use "../../scss/common";

.configurator {
  position: relative;
  @media(min-width: variables.$container-md-min) {
    display: grid;
    grid-template-columns: 1fr 2fr 1fr;
    grid-template-rows: 1fr 0.25fr;
    grid-template-areas:
          "empty main language"
          ". . button";
  }
}

.mainContainer {
  display: block;
  grid-area: main;
}

.topContainer {
  display: flex;
  flex-direction: column;

  @media(min-width: variables.$container-md-min) {
  flex-direction: row;
  justify-content: space-between;
  align-items: flex-end;
  }
}

.languageContainer {
  @media(min-width: variables.$container-md-min) {
    grid-area: language;
    justify-self: start;
    align-content: center;
  }
}

.language {
  @extend .clear-button;
  @media(min-width: variables.$container-md-min) {
    display: flex;
    flex-direction: column;
    gap: var(--margin-small);
  }
}

.orientationContainer {
  display: flex;
  flex-direction: row;
  gap: var(--margin-small);
  justify-content: center;
  align-items: center;
  margin-bottom: var(--margin-default);
}

.orientation {
  @extend .clear-button;
  text-transform: uppercase;
  display: flex;
  align-items: center;
  flex-direction: column;
  opacity: var(--opacity-default);
  font-size: 40px;
  color: var(--text-color);

  &:disabled {
    opacity: 1;
  }
  span {
    font-size: 10px;
  }
}


.levelTypeSelector {
  display: flex;
  flex-direction: row;
  gap: var(--margin-small);
  justify-content: center;
  align-items: center;
  margin-bottom: calc(-1*var(--border-width));
}
.levelType {
  @extend .clear-button;
  @extend .codemotion-highlighted;
  text-transform: uppercase;
  opacity: var(--opacity-default);
  &:disabled {
    opacity: 1;
  }
  p {
    margin:0;
  }
}

.levelContainer {
  @extend .codemotion-box;
  display: flex;
  flex-direction: column;
  gap: var(--margin-default);
  padding: var(--margin-default) var(--margin-default);
  @media(min-width: variables.$container-md-min) {
    padding: var(--margin-variable-medium) var(--margin-variable-big);
  }
  p {
    margin: 0;
  }
}

.level {
  display: flex;
  flex-direction: row;
  gap: var(--margin-default);
  justify-content: center;

  button {
    @extend .clear-button;
    max-width: 25%;
    background-color: var(--btn-level-bg);
    color: var(--btn-level-text);
    opacity: var(--opacity-default);

    @media(min-width: variables.$container-md-min) {
      max-width: 100%;
    }

    img {
      max-width: 100%;
    }
    p {
      margin:0;
      text-transform: uppercase;
    }

    &:disabled {
      opacity: 1;
      cursor: default;
    }
  }
}

.slidesContainer {
  display: flex;
  flex-direction: column;
  gap: var(--margin-small);
  justify-content: flex-start;
  align-items: flex-start;
  padding-left: calc(2*var(--border-width));
  @media(min-width: variables.$container-md-min) {
    flex-direction: column;
  }

}
.slidesTitle {
  @extend .title--simple;
  font-weight: 500;
  text-transform: uppercase;
}
.slides {
    display: flex;
    flex-direction: row;
    gap: var(--margin-default);
    justify-content: center;
    @media(min-width: variables.$container-md-min) {
        flex-direction: row;
    }
}
.slide {
  @extend .clear-button;
  @extend .codemotion-wrapper-alternative;
  padding: var(--margin-variable-small) var(--margin-variable-default);
  display: block;
  aspect-ratio: 2/1.5;
  font-weight: 500;

  &:disabled {
    @extend .codemotion-wrapper;
    rotate: -3deg;
    cursor: default;
  }

  p {
    margin:0;
  }

}
.startButton {
  grid-area: button;
  font-size: clamp(1.6em, 3.2vw, 3em);
  text-transform: uppercase;
  margin-top:var(--margin-default);

  @media(min-width: variables.$container-md-min) {
    margin-top:0;
    position: absolute;
    top: -160px;
    left: -50px;
  }
  @media(min-width: variables.$container-xl-min) {
    top: -200px;
  }
}


// TODO: remove below code
.recap {
  display: block;
  border: 1px solid black;
  margin: 20px;
  padding: 10px;
}

.field {
  margin: 10px;
  display: flex;
  gap: 20px
}
